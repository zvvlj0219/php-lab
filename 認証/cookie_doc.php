<?php
/**
 * クッキー
 * ■クッキーとは
 * クッキーはクライアント側にデータを保存するためのものです。
 * 例えば一度ホームページを閲覧したクライアントに対してクッキーを送信して、
 * 保存しておいてもらえば、次にホームページにアクセスがあった時にクッキーが、
 * あるかどうかを確認することで初めての訪問者なのかどうか調べることができます。
 * 
 * 
 * ■クッキーの送信 
 *      bool setcookie ( string name [, string value [, int expire [, string path
 *      [, string domain [, int secure]]]]] )
 * setcookie() は、その他のヘッダ情報と共に 送信するクッキーを定義します。
 * ほかのヘッダ情報と同様に、 クッキーは、スクリプトによる他のあらゆる出力
 * よりも前に送信される必要があります。もしもこの関数をコールする前に何らか
 * の出力がある場合には、setcookie()は失敗し FALSE を返します。setcookie()
 * が正常に実行されると、TRUE を返します。この関数はユーザーがクッキーを受
 * け入れたかどうかを示すことはしません。
 * $変数 = setcookie(クッキー名、値);
 * $flag = setcookie("visited", 1); // 常にtrueが返ってくる

 * 
 * 
 * ■クッキーの読み込み
 *      $val = $_COOKIE["クッキーの名前"]
 * クッキーがあるサーバによって保存された時、次に同じサーバに対してアクセスすると、
 * そのサーバによって保存されたクッキーを環境変数としてサーバへ送ります。
 * サーバ側ではクライアントからページの要求などがあった時に
 * クッキーが合わせて送られてきているかを確認するというわけです。
 * 
 * 
 * ■クッキーの有効期限の設定
 *  クッキーは有効期限を指定しない場合、クライアント側のブラウザが閉じてしまうと消えてしまいます。ブラウザが閉じてもクッキーを一定期間残しておきたい場合には明示的に有効期限を設定します。
 * 有効期限はsetcookie関数の3番目の引数で指定します。
 * 指定する値はUNIX標準時1970年1月1日からの秒数で指定することになっているため、
 * まず現在時刻のUNIX標準時からの経過秒数を取得し、有効期限を設定したい時間を秒に
 * 換算した値を加算して設定すると言う手順になります。
 * 例）$flag = setcookie("visited", $count, time() + 180);
 * 
 * 
 * ■クッキーを削除する
 * クッキーは必要なくなったら削除できます。不要なクッキーは出来る限り削除しておきましょう。
 * クッキーを削除するためには、有効期限を昔の時間に設定することで削除します。
 * 例えば下記のようにします。
 * setcookie("visited", $count, time() - 1800);
 * 
 * 
 * ■1つのクッキーに複数の値を格納する
 * 1つのサーバからクライアントに送ることが出来るクッキーは1つだけではありません。
 * クライアントは1つのサーバから受け取ることが出来るクッキーは最大20個まで、
 * 全体でも合計300個までのクッキーしか保持できないことになっています。
 * その為、多くのクッキーを利用したい場合には工夫が必要となります
 * 
 * setcookie("buy[1]", "Televison");
 * setcookie("buy[2]", "Video");
 * setcookie("buy[3]", "Audio");
 * このようにすると、クッキー名としては「buy」だけが使われますので
 * 1つしかクッキーを消費しません。
 * 
 */